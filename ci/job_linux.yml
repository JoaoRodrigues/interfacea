 parameters:
  OS: ''
  image: ''

 stages:
  - stage: "Builder_${{ parameters.OS }}"  # stage names must be unique
    dependsOn: []

    jobs:
      - template: job_backbone.yml
        parameters:
          displayName: ${{ parameters.OS }}
          vmImage: ${{ parameters.image }}
          steps:
            - script: |
                source activate $(condaEnvName)
                python setup.py build
                python setup.py install
                python -c "import interfacea as ia; print(ia.__version__)"
              displayName: Build & Install

  # These two will run in parallel since they share the same dependency
  # Only run if the Builder step is successful
  - stage: "Linter_${{ parameters.OS }}"
    dependsOn: "Builder_${{ parameters.OS }}"
    condition: succeeded('Builder_${{ parameters.OS }}')

    jobs:
      - template: job_backbone.yml
        parameters:
          displayName: ${{ parameters.OS }}
          vmImage: ${{ parameters.image }}
          steps:
            - script: |
                source activate $(condaEnvName)
                flake8 .
              displayName: Run Flake8

  - stage: "Tester_${{ parameters.OS }}"
    dependsOn: "Builder_${{ parameters.OS }}"
    condition: succeeded('Builder_${{ parameters.OS }}')

    jobs:
      - template: job_backbone.yml
        parameters:
          displayName: ${{ parameters.OS }}
          vmImage: ${{ parameters.image }}
          steps:
            - script: |
                source activate $(condaEnvName)
                pip install -e .
                pip install pytest-azurepipelines
                pytest . --cov=interfacea --cov-report=xml --cov-report=html
              displayName: Run Unit Tests

  - stage: "CodeClimate_Upload"
    dependsOn: "Tester_${{ parameters.OS }}"
    condition: succeeded('Tester_${{ parameters.OS }}')

    jobs:
      - template: job_backbone.yml
        parameters:
          displayName: ${{ parameters.OS }}
          vmImage: ${{ parameters.image }}
          steps:
            - script: |
                source activate $(condaEnvName)
                curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
                chmod +x ./cc-test-reporter
                ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.json coverage/lcov.info
                ./cc-test-reporter upload-coverage
              displayName: Run Unit Tests
